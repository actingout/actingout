<?php

/**
 * This is the model base class for the table "achievement_details".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "AchievementDetails".
 *
 * Columns in table "achievement_details" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $ach_id
 * @property string $ach_name
 * @property string $ach_desc
 * @property string $earned
 * @property string $applies_for
 * @property string $in_row
 * @property string $category
 * @property integer $ach_con
 *
 */
abstract class BaseAchievementDetails extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'achievement_details';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'AchievementDetails|AchievementDetails', $n);
	}

	public static function representingColumn() {
		return 'ach_name';
	}

	public function rules() {
		return array(
			array('ach_name, ach_desc, earned, applies_for, in_row, category, ach_con', 'required'),
			array('ach_con', 'numerical', 'integerOnly'=>true),
			array('ach_name, category', 'length', 'max'=>255),
			array('earned, applies_for', 'length', 'max'=>5),
			array('in_row', 'length', 'max'=>3),
			array('ach_id, ach_name, ach_desc, earned, applies_for, in_row, category, ach_con', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'ach_id' => Yii::t('app', 'Ach'),
			'ach_name' => Yii::t('app', 'Ach Name'),
			'ach_desc' => Yii::t('app', 'Ach Desc'),
			'earned' => Yii::t('app', 'Earned'),
			'applies_for' => Yii::t('app', 'Applies For'),
			'in_row' => Yii::t('app', 'In Row'),
			'category' => Yii::t('app', 'Category'),
			'ach_con' => Yii::t('app', 'Ach Con'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('ach_id', $this->ach_id);
		$criteria->compare('ach_name', $this->ach_name, true);
		$criteria->compare('ach_desc', $this->ach_desc, true);
		$criteria->compare('earned', $this->earned, true);
		$criteria->compare('applies_for', $this->applies_for, true);
		$criteria->compare('in_row', $this->in_row, true);
		$criteria->compare('category', $this->category, true);
		$criteria->compare('ach_con', $this->ach_con);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}