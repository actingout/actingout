<?php

/**
 * This is the model base class for the table "user_achievements".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "UserAchievements".
 *
 * Columns in table "user_achievements" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $user_achievement_id
 * @property integer $user_id
 * @property string $player_id
 * @property integer $in_a_row
 * @property integer $guess
 * @property string $categories_act
 * @property string $categories_guess
 * @property string $achievements
 *
 */
abstract class BaseUserAchievements extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'user_achievements';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'UserAchievements|UserAchievements', $n);
	}

	public static function representingColumn() {
		return 'player_id';
	}

	public function rules() {
		return array(
			array('user_id, player_id, in_a_row, guess, categories_act, categories_guess, achievements', 'required'),
			array('user_id, in_a_row, guess', 'numerical', 'integerOnly'=>true),
			array('user_achievement_id, user_id, player_id, in_a_row, guess, categories_act, categories_guess, achievements', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'user_achievement_id' => Yii::t('app', 'User Achievement'),
			'user_id' => Yii::t('app', 'User'),
			'player_id' => Yii::t('app', 'Player'),
			'in_a_row' => Yii::t('app', 'In A Row'),
			'guess' => Yii::t('app', 'Guess'),
			'categories_act' => Yii::t('app', 'Categories Act'),
			'categories_guess' => Yii::t('app', 'Categories Guess'),
			'achievements' => Yii::t('app', 'Achievements'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('user_achievement_id', $this->user_achievement_id);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('player_id', $this->player_id, true);
		$criteria->compare('in_a_row', $this->in_a_row);
		$criteria->compare('guess', $this->guess);
		$criteria->compare('categories_act', $this->categories_act, true);
		$criteria->compare('categories_guess', $this->categories_guess, true);
		$criteria->compare('achievements', $this->achievements, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}